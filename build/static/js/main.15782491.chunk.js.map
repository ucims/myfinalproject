{"version":3,"sources":["pages/About.js","pages/Contact.js","pages/Home.js","App.js","serviceWorker.js","reducers/pesan.js","reducers/index.js","index.js"],"names":["TitltPage","Sosmed","className","href","About","React","Component","Contact","pesanRef","dispatch","useDispatch","pesan","useSelector","state","onSubmit","e","newPesan","value","type","preventDefault","name","rows","cols","placeholder","ref","input","colSpan","map","item","index","key","Home","App","to","exact","path","Boolean","window","location","hostname","match","pesan_","action","combineReducers","store","createStore","reducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wSAEA,SAASA,IACL,OACI,uGAEI,8BAKZ,SAASC,IACL,OACI,2DAC+B,6BAC3B,yBAAKC,UAAU,gBACX,uBAAGC,KAAK,qCAAoC,uBAAGD,UAAU,oBACzD,uBAAGC,KAAK,gCAA+B,uBAAGD,UAAU,kBACpD,uBAAGC,KAAK,gCAA+B,uBAAGD,UAAU,oB,IAK/CE,E,uKAEb,OACI,yBAAKF,UAAU,OACX,4BAAQA,UAAU,cACd,kBAACF,EAAD,MACA,kBAACC,EAAD,Y,GANeI,IAAMC,W,QCgC1BC,MApDf,WAEQ,IAAIC,EAEEC,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAezC,OACI,yBAAKT,UAAU,OACX,4BAAQA,UAAU,cAAlB,kBAEmB,6BACf,0BAAMY,SAlBG,SAACC,GAClB,IAAIC,EAAWR,EAASS,MAExBR,EAAS,CACLS,KAAO,YACPP,MAAQK,IAGZD,EAAEI,iBACFX,EAASS,MAAQ,KAUL,+BACI,gCACA,+BACA,4BACI,qCACA,4BAAI,2BAAOG,KAAK,QAAQC,KAAK,IAAIC,KAAK,KAAKC,YAAY,qBAAqBC,IAAK,SAAAC,GAAK,OAAIjB,EAAWiB,OAEzG,4BACI,wBAAIC,QAAQ,KACR,2BAAOR,KAAK,SAAShB,UAAU,YAAYe,MAAM,eAMrE,6BAEI,4BACKN,EAAMgB,KAAI,SAACC,EAAMC,GAAP,OAAiB,wBAAI3B,UAAU,WAAW4B,IAAKD,GAAQD,WC7C3E,SAASG,IACpB,OACI,yBAAK7B,UAAU,OACX,4BAAQA,UAAU,cAAlB,YC6BG8B,MA5Bf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK9B,UAAU,OACb,4BAAQA,UAAU,cAEhB,4BACE,4BAAI,kBAAC,IAAD,CAAM+B,GAAG,KAAT,YACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,WACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,cAGR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAACJ,EAAD,OAEF,kBAAC,IAAD,CAAOI,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,WCdQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mBCNSC,EAZA,WAAyB,IAAxB5B,EAAuB,uDAAf,GAAI6B,EAAW,uCACnC,OAAOA,EAAOxB,MACV,IAAK,YACL,MAAM,GAAN,mBACOL,GADP,CAEI6B,EAAO/B,QAEX,QACI,OAAOE,ICLJ8B,cAAiB,CAAChC,UCO3BiC,EAAQC,YAAYC,GAE1BC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,SHmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.15782491.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction TitltPage(){\r\n    return (\r\n        <div>\r\n            Ini adalah final project kelas ReactJS batch Juni Sanbercode Code 2020.\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Sosmed() {\r\n    return (\r\n        <div>\r\n            Terhubung dengan saya di : <br />\r\n            <div className=\"social-media\">\r\n                <a href=\"https://www.linkedin.com/in/ucims\"><i className=\"fa fa-linkedin\"></i ></a>\r\n                <a href=\"https://www.github.com/ucims\"><i className=\"fa fa-github\"></i></a>\r\n                <a href=\"https://www.gitlab.com/ucims\"><i className=\"fa fa-gitlab\"></i></a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default class About extends React.Component{\r\n    render() {\r\n        return(\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <TitltPage />\r\n                    <Sosmed />\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction Contact() {\r\n\r\n        let pesanRef;\r\n        \r\n        const dispatch = useDispatch();\r\n        const pesan = useSelector(state => state.pesan);\r\n        \r\n        const _handlePesan = (e) => {\r\n            let newPesan = pesanRef.value;\r\n           \r\n            dispatch({\r\n                type : 'ADD PESAN',\r\n                pesan : newPesan\r\n            })\r\n\r\n            e.preventDefault();\r\n            pesanRef.value = '';\r\n            \r\n        }\r\n\r\n        return(\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">                \r\n                    {/* Ini adalah form untuk mengisis pesan yang akan ditamapilkana dalam bentuk list  */}\r\n                    Kirimkan pesan <br />\r\n                    <form onSubmit={_handlePesan}>\r\n                        <table>\r\n                            <thead></thead>\r\n                            <tbody>                            \r\n                            <tr>\r\n                                <th>Pesan</th>\r\n                                <td><input name=\"pesan\" rows=\"4\" cols=\"75\" placeholder=\"input your message\" ref={input => pesanRef = input}></input></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan=\"2\">\r\n                                    <input type=\"submit\" className=\"btn-pesan\" value=\"Kirim\"></input>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </form>\r\n                <div>\r\n                    {/* ini adalah list pesan yang sudah diinputkan */}\r\n                    <ol> \r\n                        {pesan.map((item, index) => <li className=\"ul-pesan\" key={index}>{item}</li> )}\r\n                    </ol>\r\n                </div>                    \r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Contact;","import React from 'react'\r\n\r\nexport default function Home(){\r\n    return(\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                Welcome                \r\n            </header>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport {Contact, Home, About} from './pages';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {/* Berikut adalah menu dari web yang dibuat */}\r\n          <ul>\r\n            <li><Link to=\"/\">Beranda</Link></li>\r\n            <li><Link to=\"/contact\">Kontak</Link></li>\r\n            <li><Link to=\"/about\">Tentang</Link></li>\r\n          </ul>\r\n        </header>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home></Home>\r\n          </Route>\r\n          <Route path=\"/contact\">\r\n            <Contact  />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About></About>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const pesan_ = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'ADD PESAN' :\r\n        return [\r\n            ...state,\r\n            action.pesan\r\n        ]\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default pesan_;","import { combineReducers } from 'redux';\r\nimport pesan from './pesan';\r\n\r\nexport default combineReducers( {pesan})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}